# Find and replace text in files recursively.
#
# A couple of notes:
# 1. LC_ALL causes this pattern to ignore unicode characters -- but that's fine
#    in the general case I care about. This is an issue on macOS because it
#    employs multibyte-on-demand UTF-8 encoding. More info here:
#    http://stackoverflow.com/a/23584470/641766
# 2. sed -i.bak is a trick to make sed in-place work on both linux and mac.
#    More info: http://stackoverflow.com/a/22084103/641766
find-replace-recursive() {
    local pattern="$1"
    local numproc

    # Override order: FIND_REPLACE_NUM_PROC > NUM_PROC > auto-detect > default (4)
    if [ -n "$FIND_REPLACE_NUM_PROC" ]; then
        numproc="$FIND_REPLACE_NUM_PROC"
    elif [ -n "$NUM_PROC" ]; then
        numproc="$NUM_PROC"
    elif command -v nproc >/dev/null 2>&1; then
        numproc=$(nproc)
    elif [ "$(uname)" = "Darwin" ]; then
        numproc=$(sysctl -n hw.ncpu)
    else
        numproc=4
    fi

    # Validate pattern
    local err
    err=$(echo | sed -e "$pattern" 2>&1 | tail -n 1)
    [ -n "$err" ] && { echo "invalid pattern: ${err:3}"; return; }
    [ -z "$pattern" ] && { echo "usage: find-replace-recursive s/find/replace/g"; return; }

    # Find text files, ignoring hidden paths and common binary/build dirs,
    # then perform in-place replacement using multiple processes.
    LC_ALL=C find . -type f \
        ! -path '*/.*' \
        ! -path '*/node_modules/*' \
        ! -path '*/out/*' \
        ! -path '*/dist/*' \
        ! -path '*/build/*' \
        -exec grep -Iq . {} \; -print0 | \
        xargs -0 -P "$numproc" sed -i.sedbak "$pattern"

    # Remove sed backup files
    find . -name '*.sedbak' -print0 | xargs -0 -P "$numproc" rm -f
    find . -name '.*.sedbak' -print0 | xargs -0 -P "$numproc" rm -f
}
